name: W3C Deploy
author: "Sid Vishnoi"
description: "Build ReSpec/Bikeshed specs, validate output and publish to w3.org or GitHub pages"

inputs:
  type:
    description: Possible values - 'respec', 'bikeshed'
  source:
    description: Source file path.
  validateLinks:
    description: Validate hyperlinks
    default: true
  validateMarkup:
    description: Validate markup
    default: true
  ghPages:
    description: Provide a branch name (default "gh-pages") to deploy to GitHub pages. Set to false to not deploy.
    default: "gh-pages"

runs:
  using: composite
  steps:
    - name: Prepare
      id: prepare
      run: |
        echo "::group::Prepare"
        node ${{ github.action_path }}/prepare.js
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS: ${{ toJSON(inputs) }}
        IN_GITHUB_TOKEN: ${{ github.token }}
        IN_GITHUB_EVENT_NAME: ${{ github.event_name }}

    - name: Setup toolchain
      run: |
        echo "::group::Setup toolchain"
        ${{ github.action_path }}/setup.sh
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_TYPE: ${{ steps.prepare.outputs.type }}
        HOME: /home/runner

    - name: Generate Static HTML
      id: generate-html
      run: |
        echo "::group::Generate Static HTML"
        ${{ github.action_path }}/build.sh
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_TYPE: ${{ steps.prepare.outputs.type }}
        INPUTS_SOURCE: ${{ steps.prepare.outputs.source }}

    - name: Validate hyperlinks
      run: |
        echo "::group::Validate hyperlinks"
        ${{ github.action_path }}/validate-links.sh
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_VALIDATE_LINKS: ${{ steps.prepare.outputs.validateLinks }}
        OUTPUT_FILE: ${{ steps.generate-html.outputs.output }}

    - name: Validate markup
      run: |
        echo "::group::Validate markup"
        ${{ github.action_path }}/validate-markup.sh
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_VALIDATE_MARKUP: ${{ steps.prepare.outputs.validateMarkup }}
        OUTPUT_FILE: ${{ steps.generate-html.outputs.output }}

    - name: Deploy to GitHub pages
      run: |
        echo "::group::Deploy to GitHub pages"
        node ${{ github.action_path }}/deploy-gh-pages.js
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_GITHUB_TOKEN: ${{ steps.prepare.outputs.GITHUB_TOKEN }}
        IN_GITHUB_EVENT_NAME: ${{ github.event_name }}
        IN_GITHUB_REPOSITORY: ${{ github.repository }}
        IN_GITHUB_SHA: ${{ github.sha }}
        IN_GITHUB_ACTOR: ${{ github.actor }}
        INPUTS_GH_PAGES_BRANCH: ${{ steps.prepare.outputs.ghPages }}
        INPUTS_SOURCE: ${{ steps.prepare.outputs.source }}
        OUTPUT_FILE: ${{ steps.generate-html.outputs.output }}
